from __future__ import annotations

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message

from ..config import get_settings
from ..services.billing import BillingService

router = Router()


@router.message(Command("pricing"))
async def cmd_pricing(message: Message):
    settings = get_settings()
    text = (
        "üí∞ –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
        f"‚Ä¢ –ü–æ–∫—É–ø–∫–∞: {settings.price_buy_rub}‚ÇΩ –∑–∞ —Ç–æ–∫–µ–Ω\n"
        f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞: {settings.price_sell_rub}‚ÇΩ –∑–∞ —Ç–æ–∫–µ–Ω\n"
        "–†–µ–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ Telegram Stars –∏ —Ä—É—á–Ω—ã–µ –∑–∞—è–≤–∫–∏."
    )
    await message.answer(text)


@router.message(F.text.casefold() == "–º–æ–π –±–∞–ª–∞–Ω—Å")
@router.message(Command("balance"))
async def show_balance(message: Message, billing_service: BillingService):
    user = await billing_service.get_user(message.chat.id)
    balance = user.balance if user else 0
    await message.answer(f"üíº –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance}</b> —Ç–æ–∫–µ–Ω–æ–≤")


@router.message(F.text.casefold() == "–∏—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π")
async def history(message: Message, billing_service: BillingService):
    user = await billing_service.get_user(message.chat.id)
    if not user:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    transactions = await billing_service.list_user_history(user)
    if not transactions:
        await message.answer("üì≠ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞")
        return
    lines = ["üßæ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:"]
    for txn in transactions[:10]:
        sign = "+" if txn.amount > 0 else ""
        emoji = "‚ûï" if txn.amount > 0 else "‚ûñ"
        lines.append(
            f"{txn.created_at:%Y-%m-%d %H:%M} | {emoji}{abs(txn.amount)} | {txn.type.value}"
        )
    await message.answer("\n".join(lines))


@router.message(F.text.casefold() == "–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: Message):
    await message.answer("ü§ù –°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —á–µ—Ä–µ–∑ @support_username")
